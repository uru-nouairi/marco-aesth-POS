
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check user roles
    function getUserRole(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role;
    }

    // Helper function to check if a user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }

    // Owner has full access to all collections
    match /{document=**} {
      allow read, write: if isSignedIn() && getUserRole(request.auth.uid) == 'owner';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Allow users to read their own data
      allow read: if isSignedIn() && request.auth.uid == userId;
      // Allow owners to read/write any user document
      allow read, write: if isSignedIn() && getUserRole(request.auth.uid) == 'owner';
    }

    // Rules for the 'products' collection
    match /products/{productId} {
      // Authenticated users can read products
      allow read: if isSignedIn();
      // Only owners can create, update, or delete products
      allow write: if isSignedIn() && getUserRole(request.auth.uid) == 'owner';
    }

    // Rules for the 'sales' collection
    match /sales/{saleId} {
      // Authenticated users can read sales
      allow read: if isSignedIn();
      // Cashiers and owners can create sales
      allow create: if isSignedIn() && (getUserRole(request.auth.uid) == 'cashier' || getUserRole(request.auth.uid) == 'owner');
      // Only owners can update or delete sales records
      allow update, delete: if isSignedIn() && getUserRole(request.auth.uid) == 'owner';
    }
  }
}
